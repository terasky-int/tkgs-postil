{{- if .Values.postgres.deploy }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: hub-enterprise-postgres
    tier: database
  name: hub-enterprise-postgres
  # annotations:
  #   "helm.sh/hook": pre-install,pre-upgrade
  #   "helm.sh/hook-weight": "1"
  #   "helm.sh/resource-policy": keep
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hub-enterprise-postgres
      tier: database
  template:
    metadata:
      labels:
        app: hub-enterprise-postgres
        tier: database
    spec:
      imagePullSecrets:
        - name: {{ include "hub-enterprise.fullname" . }}-pull-secret
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}    
      containers:
        - image: "{{ .Values.postgres.image }}"
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          imagePullPolicy: Always
          name: hub-enterprise-postgres
          envFrom:
          - secretRef:
              name: hub-enterprise-postgres
          ports:
          - containerPort: 5432
            name: http
            protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - mountPath: /var/lib/postgresql/data
            name: hub-enterprise-postgres
            readOnly: false
      volumes:
      - name: hub-enterprise-postgres
        persistentVolumeClaim:
          claimName: hub-enterprise-postgres
{{- end }}
