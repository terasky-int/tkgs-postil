{{- if .Values.monitoring.deploy }}
{{- $fullName := (list (include "hub-enterprise.fullname" .) "pushgateway" | join "-") }}
{{- if eq .Values.pushgateway.ingress.type "nginx" -}}
apiVersion: "networking.k8s.io/v1"
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    app: {{ $fullName }}
  annotations:
    timestamp: {{ date "20060102150405" now | quote }}
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-buffer-size: 128k
spec:
  rules:
    - host: {{ .Values.pushgateway.hostname }}
      http:
        paths:
          - path: /
            pathType: {{ .Values.pushgateway.ingress.pathType }}
            backend:
              service:
                name: {{ $fullName }}
                port: 
                  name: http
{{- else if eq .Values.pushgateway.ingress.type "contour" -}}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    app: {{ $fullName }}
  annotations:
    projectcontour.io/websocket-routes: "/"
spec:
  rules:
  - host: {{ .Values.pushgateway.hostname }}
    http:
      paths:
      - path: /
        pathType: {{ .Values.pushgateway.ingress.pathType }}
        backend:
          service: 
            name: {{ $fullName }}
            port: 
              name: http
  tls:
  - hosts:
    - {{ .Values.pushgateway.hostname }}
    secretName: {{ .Values.pushgateway.ingress.secretName }}
{{- else if eq .Values.pushgateway.ingress.type "openshift" -}}
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  labels:
    expose: "true"
    app: {{ $fullName }}
  name: {{ $fullName }}
spec:
  port:
    targetPort: http
  to:
    kind: Service
    name: {{ $fullName }}
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: None
  wildcardPolicy: None
{{- end }}
{{- end -}}
